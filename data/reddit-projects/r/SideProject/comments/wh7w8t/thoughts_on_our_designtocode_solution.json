{
  "author": "sruli_z",
  "original_created_utc": 1659737531,
  "title": "Thoughts on our design-to-code solution?",
  "created_utc": 1659758413,
  "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys, tech lead at Rapidream here 👋&lt;br/&gt;\nNot sure about you, but I always dread starting a new front-end job because of all the tedious pixel pushing and annoyances that come with building out the responsive flex.&lt;br/&gt;\nAs us devs know, there really aren’t any great design-to-code solutions out there and some might say such wizardry is &amp;quot;impossible&amp;quot; without the use of black magic such as AI 🪄:  &lt;/p&gt;\n\n&lt;p&gt;It would be easy to say that the reason it doesn&amp;#39;t work all boils down to flex, but in reality, what does that mean?&lt;br/&gt;\nWell in order to have a proper CSS flex app you need a few things.&lt;br/&gt;\n1) You need to be using &amp;quot;display: flex;&amp;quot; instead of &amp;quot;display: absolute;&amp;quot; 😝&lt;br/&gt;\n2) Your tree hierarchy must be in the order that HTML will render your elements (Not the way a designer would structure a Figma design).&lt;br/&gt;\n3) You need none or very few elements that overlap with each other (Designers really love this one 😃).  &lt;/p&gt;\n\n&lt;p&gt;So now that we got that out the way we can talk about the impossible.&lt;br/&gt;\nRapidream tackles these 3 problems head-on by firstly cleaning up the node tree 🧹 (Merging nodes that can be turned into a single element, converting vectors into SVG assets, removing invisible nodes, and much more). We then rearrange the DOM tree to match what the proper HTML hierarchy expects. We then apply the proper responsive flex for the elements.&lt;br/&gt;\nLastly, we make it super easy to&lt;br/&gt;\n1) Fix Rapidreams mistakes (We mark elements which we could not determine the proper flex for).&lt;br/&gt;\n2) Create re-useable components with props.&lt;br/&gt;\n3) Export the code with a few clicks and forget about us. (Although when you see our output it gets very hard to forget us 😅)  &lt;/p&gt;\n\n&lt;p&gt;TLDR:&lt;br/&gt;\n1) We clean up the Figma Dom tree and convert it into a much smaller tree of just the HTML elements. 🧹&lt;br/&gt;\n2) We calculate the proper hierarchy and responsive flex positioning for all the elements. 💪&lt;br/&gt;\n3) We make it super easy with our tooling to fix our mistakes by marking what we could not apply flex to. 🩹&lt;br/&gt;\n4) Exporting is as easy as 2 clicks and don&amp;#39;t worry about any extra or embedded code, What you see is what you get! 🚀  &lt;/p&gt;\n\n&lt;p&gt;Links:&lt;br/&gt;\nSign up here: &lt;a href=\"https://rapidream.com\"&gt;https://rapidream.com&lt;/a&gt;&lt;br/&gt;\nGet the Figma plugin here: &lt;a href=\"https://www.figma.com/community/plugin/1053344483482247336\"&gt;https://www.figma.com/community/plugin/1053344483482247336&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
  "score": 5,
  "permalink": "/r/SideProject/comments/wh7w8t/thoughts_on_our_designtocode_solution/",
  "subreddit": "SideProject",
  "id": "wh7w8t",
  "is_self": true,
  "media": null,
  "is_video": false,
  "sensitive": false,
  "the_new_excerpt": "Hey guys, tech lead at Rapidream here 👋\nNot sure about you, but I always dread starting a new front-end job because of\nall the tedious pixel pushing and annoyances that come with building out the\nresponsive flex.\nAs us devs know, there really aren’t any great design-to-code solutions out\nthere and…"
}