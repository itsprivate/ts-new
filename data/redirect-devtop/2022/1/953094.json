{
  "type_of": "article",
  "id": 953094,
  "title": "OOPs Concepts in TypeScript. What is the 4, Basics of Object-Oriented Programming Fundamentals & their Examples",
  "description": "1. Abstraction  Abstraction lets programmers create useful and reusable tools. For example, a...",
  "readable_publish_date": "Jan 12",
  "slug": "oops-concepts-in-typescript-what-is-the-4-basics-of-object-oriented-programming-fundamentals-their-examples-138g",
  "path": "/reaganscofield/oops-concepts-in-typescript-what-is-the-4-basics-of-object-oriented-programming-fundamentals-their-examples-138g",
  "url": "https://dev.to/reaganscofield/oops-concepts-in-typescript-what-is-the-4-basics-of-object-oriented-programming-fundamentals-their-examples-138g",
  "comments_count": 5,
  "public_reactions_count": 26,
  "collection_id": null,
  "published_timestamp": "2022-01-12T19:20:48Z",
  "positive_reactions_count": 26,
  "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--v6oY6E1I--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/230k9ymxerwzch40rdg3.jpeg",
  "social_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--ICiScUrT--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/230k9ymxerwzch40rdg3.jpeg",
  "canonical_url": "https://dev.to/reaganscofield/oops-concepts-in-typescript-what-is-the-4-basics-of-object-oriented-programming-fundamentals-their-examples-138g",
  "created_at": "2022-01-13T13:26:22.483Z",
  "edited_at": null,
  "crossposted_at": null,
  "published_at": "2022-01-12T19:20:48Z",
  "last_comment_at": "2022-01-13T12:22:42Z",
  "reading_time_minutes": 3,
  "tag_list": [
    "programming",
    "typescript",
    "javascript"
  ],
  "tags": [
    "programming",
    "typescript",
    "javascript"
  ],
  "user": {
    "name": "Reagan Scofield",
    "username": "reaganscofield",
    "twitter_username": "ReaganScofield",
    "github_username": "reaganscofield",
    "website_url": null,
    "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--u8SKNYvI--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/187302/8650e0cc-7c79-4a4c-96f3-e98a1a2b4b9b.jpg",
    "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--FIou9qzo--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/187302/8650e0cc-7c79-4a4c-96f3-e98a1a2b4b9b.jpg"
  },
  "original_created_at": "2022-01-12T19:20:48Z",
  "image": "https://res.cloudinary.com/practicaldev/image/fetch/s--v6oY6E1I--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/230k9ymxerwzch40rdg3.jpeg",
  "author": "Reagan Scofield",
  "author_url": "https://dev.to/reaganscofield",
  "localize": [
    {
      "locale": "ja",
      "description": "1. 抽象化 抽象化することで、プログラマは便利で再利用可能なツールを作成することができます。例えば、...",
      "title": "TypeScriptで学ぶOOPsの概念。4とは、オブジェクト指向プログラミングの基礎とその例"
    },
    {
      "locale": "zh",
      "description": "1. 抽象化 抽象化让程序员创造出有用和可重复使用的工具。举例来说，如果一个人有一个好的工作环境，那么他就会有一个好的工作环境。",
      "title": "TypeScript中的OOPs概念。什么是4，面向对象的编程基础知识和它们的例子"
    },
    {
      "locale": "zh-Hant",
      "description": "1. 抽象化 抽象化讓程序員創造出有用和可重複使用的工具。舉例來說，如果一個人有一個好的工作環境，那麼他就會有一個好的工作環境。",
      "title": "TypeScript中的OOPs概念。什麼是4，面向對象的編程基礎知識和它們的例子"
    }
  ]
}