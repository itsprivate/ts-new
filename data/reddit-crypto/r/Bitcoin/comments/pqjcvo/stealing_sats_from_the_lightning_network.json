{
  "author": "Reckless_Satoshi",
  "original_created_utc": 1631957563,
  "title": "Stealing Sats from the Lightning Network Custodial Services",
  "created_utc": 1631972397,
  "selftext_html": "<!-- SC_OFF --><div class=\"md\"><h1>Stealing Sats From Other Users: Attacking Lightning Network&#39;s Custodial Services.</h1>\n\n<p>The Lightning Network (LN) is a truly groundbreaking way to move value around the globe. The number of users and LN enabled services is exponentially creeping up. Many services are opting for offering a free or fixed transaction fee, yet the real lightning network fees are neither free nor fixed. Instead, they are cheap (mostly) and variable (according to the payment route). I conducted a small research project to figure out whether the discrepancy between real routing fees and service&#39;s transaction fee can be exploited for a profit, and if so, how large the damage could be (spoiler: it is bad).</p>\n\n<p>&#x200B;</p>\n\n<p><a href=\"https://preview.redd.it/cmawpdpid8o71.jpg?width=1200&amp;format=pjpg&amp;auto=webp&amp;s=8d6cc6241c9861ca6016937710301f1e111e43f3\">Figure-1: u/Reckless_Satoshi wearing a hoodie, which indicates he is up to something</a></p>\n\n<p>Whom did I attack? Well, here the complete list of offended services <strong>Bitfinex, OKex, Muun, WalletOfSatoshi, LNMarkets and Southxchange</strong>. If you are reading this to make a &#39;quick sat&#39; I am sorry to disappoint you, I am publishing these findings only after the susceptible services have been contacted and flaws fixed :)</p>\n\n<h2>Cheap, but not free. A simple attack.</h2>\n\n<p>Simple, deposit funds into a custodial service then withdraw the funds, done. Congrats for your profit! I am sure you are thinking -&quot;Those sats were mine anyway, right? How does this qualify as an attack?&quot; Well, I forget to mention we also need to place a node that will be routing the payments between the custodial service and the receiving node. The routing node will collect a fee, hopefully the fee will be big enough so there is a net profit (i.e.,<em>withdrawal_fee + deposit_fee &lt; routing_fee_collected</em>). If a positive net return is possible, then it is just a matter of optimizing the size of the fee collected and the transaction speed rate to see how big the damage could be. It is easy to see how this attack must be feasible on any service with free withdrawal fee.</p>\n\n<p>How do you place a node in the middle? Well, the sending node is in charge of selecting the route. A priori, it seems unlikely that the sender will select a very expensive route. However, there is a case when the sender will certainly have to send the payment trough our routing node. We will connect our receiving node to the Lightning Network only with a single channel to our routing node. Therefore payments, if they arrive at all, must always be relayed by ourselves.</p>\n\n<p>&#x200B;</p>\n\n<p><a href=\"https://preview.redd.it/81200hkqd8o71.jpg?width=2524&amp;format=pjpg&amp;auto=webp&amp;s=fd794f86d3330c8e6b758d3847b83fd2b110624d\">Figure-2: Our receiving node is only connected to the Lightning Network through our routing node. Green arrows represent revenue, red arrows are costs.</a></p>\n\n<p>In the case depicted in Fig-2, our routing node is directly connected to the custodial service. This is ideal to optimize the attack: the deposits have no cost, HTLCs will settle quickly, and we avoid the limitations set by other routing nodes using <a href=\"https://github.com/lightningequipment/circuitbreaker\">CircuitBreaker</a> (payments fail when a few HTLCs are pending). If the attack is successful, having a lot of inbound liquidity from other nodes is key. The channel to the custodial service will quickly become unusable as we have stolen the liquidity to our side. Therefore, you want to <em>desuturate</em> it by circular rebalancing. Once we free up inbound liquidity from the custodial service, the channels to our liquidity providers will be saturated, we can chose to close those and move the profits on-chain or we could <em>loop out</em> (not sure which process is less costly: we are making free BTC, does it even matter?)</p>\n\n<p>This is one of the simplest attacks. In fact, the only LN attack I can think of, but also I am just a newbie in the process of learning. I assume there is people out there much more capable of conducting this research. Who knows, maybe there has been sizeable loses in the past that remains undisclosed.</p>\n\n<h2>1. Bitfinex</h2>\n\n<p>Bitfinex has a fixed 100 sat withdrawal fee. However, it is obvious that some withdrawals requests might cost to route more than that. I was curious to see if withdrawals that are more expensive would be processed at all: and yes, they are processed. It is my believe, after a bit of tinkering, that Bitfinex would execute any withdrawal where payment routing fee is below 10 000 ppm (1%). I gave a try to withdraw 100K sats and collected 1000 sats in fees on the middleman node.</p>\n\n<p>Making a net profit from Bitfinex is possible (at least net positive 900 sats per deposit/withdrawal cycle), however withdrawals might quickly get halted as there is a &quot;processing&quot; step on their end probably rate limiting transactions. Bitfinex&#39;s API does not seem to support yet withdrawals for the symbol &#39;LNX&#39; (these require an invoice instead of an address). So while it is possible to profit from Bitfinex, I didn&#39;t go the next step to script and optimize the attack. In any case, I filled out a report with their security team before making this public. Their site explicitly indicates that they might no reply to a report if they were already aware. As I received no reply I assume it&#39;s safe for this insight to go public.</p>\n\n<h2>2. OKex</h2>\n\n<p>The fee charged by OKex seemed to be strictly equal or higher than the cost to route the payment. There is no way one could make a net profit from OKex using this attack.</p>\n\n<h2>3. Muun wallet</h2>\n\n<p>I do not know exactly how Muun works behind the scenes. It is not strictly a custodial service, but it has definitely some sort of custodial component to it. It might be maybe some sort of hybrid: possibly a parent node (named <a href=\"https://1ml.com/node/038f8f113c580048d847d6949371726653e02b928196bad310e3eda39ff61723f6\">Magnetron</a>?) with private channels to each user&#39;s wallet (but do not quote me on this). Their super easy to use LN enabled wallet allows you to withdraw all the way down to 0 sat balance without having to pay the final fee for emptying the wallet. This, in turn, allows you to collect a net positive fee for every withdrawal that empties the wallet. As this is a smartphone app and there is no available API, I did not go through the extra complexity needed to test where are the limits of cheating Muun.</p>\n\n<h2>4. LNMarkets</h2>\n\n<p>LNmarkets is possibly one of the coolest LN services out there. The use of LNURL qrcodes to login, deposit and withdraw makes it the most LNish experience out there. It truly displays what the LN is capable of, in addition, their API documentation is simply superb. Unfortunately, their effort also made it very easy for me to script and optimize the attack. Since the service had a free withdrawal fee, it was indeed profitable.</p>\n\n<p>According to some quick testing, LNMarkets is willing to route to you any payment as long as the fee does not exceed 10 000 ppm (1%). The maximum deposit/withdrawal amount is 1m sats. As you can see, theoretically one could expect to make a net profit of ~10K for every deposit/withdrawal cycle. Each cycle takes around 20 second (this will greatly depend on whether the nodes are behind TOR or Clearnet). Using two threads, that makes for a profit of about ~4 million sats/hour .</p>\n\n<p>At 4 m sats/hour the full outbound liquidity of LNmarkets would have been stolen in 80 hours (totaling 3.3 BTC, LNMarkets is open about their outbound liquidity <a href=\"https://lnmarkets.com/node\">on their own site</a>). The script ran for 6 minutes, collecting about 450K sats in fees before some failsafe halted platform withdrawals for all users. About ~2 million sats were locked into the platform, for a net loss of ~1.5m sats. However, LNMarkets guys have been exceptionally cool about this and returned the sats to me. They certainly did not have to, but I appreciate it and shows they strive to build a healthy community.</p>\n\n<p>LNMarkets is now charging the routing fee to the user. It is a fair and sustainable solution, although it muddies the user experience. The beautiful thing about lightning is that if the users wants often and free withdrawals, they can just open a channel to LNMarkets for the price of a single on-chain fee.</p>\n\n<h2>5. Southxchange</h2>\n\n<p>Southxchange LN withdrawal fee is free. I tinkered a bit to find the maximum their node would be willing to pay for a successful routing. I think it was about 50 sats flat as maximum, but maybe it was higher. Even when I was withdrawing 1 sat, their payment was sent with 50 extra sats for routing. That&#39;s an effective 50 000 000 ppm (5000%) fee being collected!</p>\n\n<p>It was possible to deposit 100K sats and then withdraw 1 sat a time. Of course, 50 sats is a negligible amount. However, their API works flawlessly and I noticed there was no request rate limit. I wrote a simple python script able to generate local LN invoices and submit them to the exchange to process the withdrawals. It reached top speeds of up to ~300 withdrawals per minute (200 ms per withdrawal), simply wow! That makes for ~15K sats per minute. I did not optimize further the script, as the channel was already near being maxed out (current maximum pending HTLCs for a channel is 483 and they were taking long to settle). In addition, my RaspberryPi was getting CPU limited, I believe due to encrypting/decrypting the onion packages. It would have been possible to improve the attack speed by a lot with better connection and some parallelization (more accounts / more machines / more routing nodes).</p>\n\n<p>Without any further optimization, at a rate of 900K sats / hour the full outbound liquidity of Southxchange would have been depleted in ~50 days (assuming there being 10 BTC or ~1/6 of the node capacity). I stopped the script after one hour as there seemed to be no limits or failsafe whatsoever. A malicious attacker could have definitely withdrawn most liquidity in hours.</p>\n\n<p>After the attack, Southxchange has opted for rate limiting withdrawals for the user (1 every 10 minutes), but they are still free. In my opinion, this is not the optimal solution. It affects the experience of legit users that need frequent withdrawals: in-and-out quickly, minimizing exposure to custionals, this is what lightning is about. Yet, this solution also fails to prevent future attacks, as you can still get around this limit with many accounts. Instead, I would suggest charging the withdrawal fee to the user: you gotta pay what things cost. If the user wants free withdrawals, they can <em>&#39;go premium&#39;</em> by opening a channel to the exchange&#39;s node.</p>\n\n<h2>6. WalletOfSatoshi</h2>\n\n<p>WalletOfSatoshi charges the user the exact fee for the routing. It also does hold a reserve of 0.3% balance in case of unexpected high fee. This is the most conservative take together with that of OKex, in turn making these two services the least user friendly.</p>\n\n<p>If a service has free withdrawal, users are more compelled to take their BTC into self-custody between operations (it is free, why wouldn&#39;t you?). So, I am not totally sure of what I am about to say, but I have the feeling that custodial services with free transaction fees might be artificially increasing the number of transactions, therefore subsidizing nearby routing nodes. This might induce weird incentives for the creation of channels and the deployment of liquidity; hence, affecting how the lightning network grows. Yeah, sounds far-fetched, but even if tiny, there must be an impact (no idea if positive or negative impact).</p>\n\n<h1>Conclusions</h1>\n\n<ul>\n<li>Although LN transaction fees are negligible, they are not zero. While lightning allows for almost free transactions it also allows for extremely fast transfers: negligible amounts add up to worrisome amounts very quickly. If you build a service where withdrawals are not rate limited nor the fee is translated to the user, you will run into problems.</li>\n<li>This is one of the simplest attacks anyone can think of using LN, yet surprisingly, many services are susceptible. I believe that if an actual smart and malicious actor had performed it, he could have withdrawn a big chunk of the outbound liquidity of some of these nodes.</li>\n<li>By attacking ourselves the LN and publicizing the findings, we make stronger the Lightning Network and its services. Maybe soon we will be reading sensationalist headlines such as &quot;The Lightning Network has been hacked&quot; every time a custodial service using LN is exploited. It is in our hands to prevent FUD to spread also over the amazing lightning features.</li>\n</ul>\n\n<p>Finally yet importantly, I would like to apologize for the disruption caused to the service maintainers and thank them for their excellent sportsmanship. It has been a great deal of fun to learn how these futuristic services work.</p>\n\n<p>I&#39;m sharing code to replicate my findings on <a href=\"https://github.com/Reckless-Satoshi/reckless-withdrawals\">GitHub Reckless-Withdrwals</a>. So far, only LNMarkets, I will not share yet Bitfinex and Southxchange as I am not 100% confident that they are exploit proof after their fix.</p>\n\n<p>Let me know in the comments if there is any LN enabled service that I should test. I went for all of the big ones already but I might make a second round :)</p>\n\n<h1>- Reckless_Satoshi</h1>\n\n<p>If you enjoyed my little research project, you can say hi by opening a channel to me or via keysend (02ce13573f6ab577088cead4379dc64f300ffbeca2ae040beee9f3541ccc4427c7) or LNURL (LNURL1DP68GURN8GHJ7MRWVF5HGUEWVDHK6TMVDE6HYMRS9ASHQ6F0WCCJ7MRWW4EXCTECXQUSW77KS4).</p>\n\n<p>Cheers!</p>\n</div><!-- SC_ON -->",
  "score": 162,
  "preview": {
    "images": [
      {
        "source": {
          "url": "https://external-preview.redd.it/LFqgat8HO5kEtcTVpE3C4CZ8MBaeX8WjsDwW5C6wgsI.jpg?auto=webp&s=3024c7fe7c3d33636653067bbce0f08e78608bf6",
          "width": 1200,
          "height": 600
        },
        "resolutions": [
          {
            "url": "https://external-preview.redd.it/LFqgat8HO5kEtcTVpE3C4CZ8MBaeX8WjsDwW5C6wgsI.jpg?width=108&crop=smart&auto=webp&s=74e2d03b56b0f8944e652c483fc47e343e466fc0",
            "width": 108,
            "height": 54
          },
          {
            "url": "https://external-preview.redd.it/LFqgat8HO5kEtcTVpE3C4CZ8MBaeX8WjsDwW5C6wgsI.jpg?width=216&crop=smart&auto=webp&s=93f4113b07c719f84a02be32de20aba5e0744306",
            "width": 216,
            "height": 108
          },
          {
            "url": "https://external-preview.redd.it/LFqgat8HO5kEtcTVpE3C4CZ8MBaeX8WjsDwW5C6wgsI.jpg?width=320&crop=smart&auto=webp&s=f5cd98b8c9d0dbe3764bd3160530626c06688c1a",
            "width": 320,
            "height": 160
          },
          {
            "url": "https://external-preview.redd.it/LFqgat8HO5kEtcTVpE3C4CZ8MBaeX8WjsDwW5C6wgsI.jpg?width=640&crop=smart&auto=webp&s=eb4d9b2f292549dfd908ade06a24b46c1048c822",
            "width": 640,
            "height": 320
          },
          {
            "url": "https://external-preview.redd.it/LFqgat8HO5kEtcTVpE3C4CZ8MBaeX8WjsDwW5C6wgsI.jpg?width=960&crop=smart&auto=webp&s=2bcc42aac9e658d5d1ad0bbdeea10f392782048d",
            "width": 960,
            "height": 480
          },
          {
            "url": "https://external-preview.redd.it/LFqgat8HO5kEtcTVpE3C4CZ8MBaeX8WjsDwW5C6wgsI.jpg?width=1080&crop=smart&auto=webp&s=90a78c5e6ada7579249ede17ad21d14da3424832",
            "width": 1080,
            "height": 540
          }
        ],
        "variants": {},
        "id": "-TDcID2TYK98zoTqPa0x0VxzybfSCHIDebAvGzCKcVU"
      }
    ],
    "enabled": false
  },
  "permalink": "/r/Bitcoin/comments/pqjcvo/stealing_sats_from_the_lightning_network/",
  "subreddit": "Bitcoin",
  "id": "pqjcvo",
  "is_self": true,
  "media": null,
  "is_video": false,
  "the_new_excerpt": "STEALING SATS FROM OTHER USERS: ATTACKING LIGHTNING NETWORK'S CUSTODIAL\nSERVICES.\n\nThe Lightning Network (LN) is a truly groundbreaking way to move value around\nthe globe. The number of users and LN enabled services is exponentially creeping\nup. Many services are opting for offering a free or fixed…",
  "localize": [
    {
      "locale": "ja",
      "the_new_excerpt": "他のユーザーからサットを盗む。ライトニングネットワークのカストディアンを攻撃する\nサービスを利用しています。\n\nライトニングネットワーク(LN)は、世界中で価値を移動させるための、実に画期的な方法です。\n地球上で価値を移動させるための、実に画期的な方法です。ユーザー数とLN対応サービスの数は、指数関数的に増加しています。\nしています。多くのサービスは、無料または固定のサービスを提供することを選択しています...",
      "title": "ライトニングネットワークからSatsを盗む Custodial Services"
    },
    {
      "locale": "zh",
      "the_new_excerpt": "窃取其他用户的卫星。攻击闪电网络的监护权\n服务。\n\n闪电网络(LN)是一种真正具有突破性的方式，在全球范围内移动价值。\n价值在全球范围内流动的真正突破性方式。用户和支持LN的服务的数量正以指数级的速度攀升。\n增长。许多服务都选择提供免费或固定的服务。",
      "title": "从闪电网络中窃取Sats 监管服务"
    },
    {
      "locale": "zh-Hant",
      "the_new_excerpt": "竊取其他用戶的衛星。攻擊閃電網絡的監護權\n服務。\n\n閃電網絡(LN)是一種真正具有突破性的方式，在全球範圍內移動價值。\n價值在全球範圍內流動的真正突破性方式。用戶和支持LN的服務的數量正以指數級的速度攀升。\n增長。許多服務都選擇提供免費或固定的服務。",
      "title": "從閃電網絡中竊取Sats 監管服務"
    }
  ]
}